name: Build and Deploy

on:
  push:
    branches:
      - sources

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the sources branch.
      - name: Checkout Sources Branch
        uses: actions/checkout@v3
        with:
          ref: sources

      # 2. Set up Docker Buildx.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Filter changes for files that affect the Docker image.
      - name: Filter changes for Docker image build
        id: filter
        uses: dorny/paths-filter@v2
        with:
          base: ${{ github.event.before }}
          filters: |
            docker:
              - 'Dockerfile'
              - 'site.hs'
              - 'blog.cabal'
              - 'cabal.project.freeze'

      # 4. Login to GitHub Container Registry.
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5. Build and push the Docker image only if relevant files have changed.
      - name: Build and push Docker image
        if: steps.filter.outputs.docker == 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/dimchansky-github-io-builder:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 6. Build the site using the (possibly prebuilt) Docker image.
      - name: Build site
        run: make build-site

      # 7. Checkout the master branch into _master directory.
      - name: Checkout Master Branch
        uses: actions/checkout@v3
        with:
          ref: master
          path: _master

      # 8. Deploy the built site to the master branch.
      - name: Deploy site to Master branch
        run: |
          # Copy the built site to _master, excluding the .git directory.
          rsync -av --delete --exclude='.git' _site/ _master/
          cd _master
          
          # Configure git (using GitHub Actions bot identity)
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Stage, commit, and push changes (only if there are any changes)
          git add -A
          if ! git diff-index --quiet HEAD; then
            git commit -m "Deploy site: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
            git push origin master
          else
            echo "No changes to deploy."
          fi